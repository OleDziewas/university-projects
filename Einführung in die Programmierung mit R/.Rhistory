colSums(is.na(daten))
data(iris)
rm(list = ls())
data(iris)
setosa <- subset(x = iris, subset = Species == "setosa")
versicolor <- subset(x = iris, subset = Species == "versicolor")
virginica <- subset(x = iris, subset = Species == "virginica")
par(mfrow = c(2, 3))
plot(setosa$Sepal.Length, setosa$Sepal.Width, main = "1. Plot")
abline(lm(setosa$Sepal.Width ~ setosa$Sepal.Length))
abline(lm(versicolor$Sepal.Width ~ versicolor$Sepal.Length))
plot(versicolor$Sepal.Length, versicolor$Sepal.Width, main = "2. Plot")
abline(lm(versicolor$Sepal.Width ~ versicolor$Sepal.Length))
plot(virginica$Sepal.Length, virginica$Sepal.Width, main = "3. Plot")
abline(lm(virginica$Sepal.Width ~ virginica$Sepal.Length))
abline(lm(setosa$Petal.Width ~ setosa$Petal.Length))
plot(setosa$Petal.Length, setosa$Petal.Width, main = "4. Plot")
abline(lm(setosa$Petal.Width ~ setosa$Petal.Length))
layout(matrix(c(4, 3, 1, 2), nrow = 2, byrow = TRUE))
layout.show(4)
# 1. Plot
plot(setosa$Sepal.Length, setosa$Sepal.Width, main = "1. Plot")
abline(lm(setosa$Sepal.Width ~ setosa$Sepal.Length))
# 2. Plot
plot(versicolor$Sepal.Length, versicolor$Sepal.Width, main = "2. Plot")
abline(lm(versicolor$Sepal.Width ~ versicolor$Sepal.Length))
par(mfrow = c(1,1))
library(pacman)
pacman::p_load(tidyverse)
p_load(reshape2)
data("mpg", package = "ggplot2")
head(mpg, n = 5)
plot1 <- ggplot(data = mpg, aes(x = displ, y = cty))
plot1
plot1 + geom_point()
ggplot(data = mpg, aes(x = displ, y = cty)) + geom_point() + geom_line()
ggplot(data = mpg, aes(x = displ, y = cty)) +
geom_point(color = "dark green", shape = 17, size = 4) +
geom_line()
ggplot(mpg, aes(y = displ)) +
geom_boxplot() +
coord_cartesian(xlim = c(-1,1), ylim = c(-1,8)) +
ggplot(mpg, aes(y = displ)) +
geom_boxplot() +
coord_cartesian(xlim = c(-1,1), ylim = c(-1,8)) +
ylab("Hubraum in Litern") +
labs(title = "Hubraum in Litern")
ggplot(mpg, aes(y = displ)) +
geom_boxplot() +
coord_cartesian(xlim = c(-1,1), ylim = c(-1,8)) +
ylab("Hubraum in Litern") +
labs(title = "Hubraum in Litern")
data_studis <- read.spss("Studibefragung.sav", to.data.frame = T)
attach(data_studis)
setwd("F:/Uni/WS22.23/RProgramming")
attach(data_studis)
alter <- 2023 - v40_sozd_gebjahr
v40_sozd_gebjahr
data_studis <- read.spss("Studibefragung.sav", to.data.frame = T, use.value.labels = F)
attach(data_studis)
alter <- 2023 - v40_sozd_gebjahr
v40_sozd_gebjahr
alter
plot(alter, v38_sozd_kgroe)
plot(alter, v38_sozd_kgroe, col = "red")
plot(alter, v38_sozd_kgroe, col = "red", fill = T)
plot(alter, v38_sozd_kgroe, col = "red")
plot(alter, v38_sozd_kgroe, col = "red", pch = 17, lty = 1)
plot(alter, v38_sozd_kgroe, col = "red", lty = 1)
plot(alter, v38_sozd_kgroe, col = "red", pch = 16)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
levels(v38_sozd_kgroe)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
names(v38_sozd_kgroe)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
attributes(v38_sozd_kgroe)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
v38_sozd_kgroe$value.labels
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
attributes(v38_sozd_kgroe)$value.labels
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
attributes(v38_sozd_kgroe)$value.labels
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
attributes(v38_sozd_kgroe)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
label(v38_sozd_kgroe)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
labels(v38_sozd_kgroe)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
attributes(data_studis)
#       erhalten.
#       - Die Datenpunkte sollen als roter ausgefuellter Kreis dargestellt
#         werden.
#       - Die Achsenbeschriftung fuer die x-Achse ist "Alter"
#       - Fuer die Achsenbeschriftung der y-Achse soll das entsprechende
#         Variablenlabel der Variable 'v38_sozd_kgroe' verwendet werden.
#       - Die x-Achse soll nur im Bereich von 30 bis 45 dargestellt werden.
#       - Die y-Achse soll im Bereich von 140 bis zum Maximum der vorhandenen
#         Koerpergroessen dargestellt werden.
#       - Der Plot soll die Ueberschrift "Alter und Koerpergroesse" erhalten.
attributes(data_studis)$variable.labels["v38_sozd_kgroe"]
var_label <- attributes(data_studis)$variable.labels["v38_sozd_kgroe"]
plot(
alter,
v38_sozd_kgroe,
col = "red",
pch = 16,
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim(140, max(v38_sozd_kgroe)),
main = "Alter und Koerpergroesse")
plot(
alter,
v38_sozd_kgroe,
col = "red",
pch = 16,
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim(140, max(v38_sozd_kgroe, na.rm = T)),
main = "Alter und Koerpergroesse")
plot(
alter,
v38_sozd_kgroe,
col = "red",
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim(140, max(v38_sozd_kgroe, na.rm = T)),
main = "Alter und Koerpergroesse",
pch = 16)
plot(alter,
v38_sozd_kgroe,
col = "red",
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim(140, max(v38_sozd_kgroe, na.rm = T)),
main = "Alter und Koerpergroesse",
pch = 16)
var_label <- attributes(data_studis)$variable.labels["v38_sozd_kgroe"]
plot(alter,
v38_sozd_kgroe,
col = "red",
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim(140, max(v38_sozd_kgroe, na.rm = T)),
main = "Alter und Koerpergroesse",
pch = 16)
plot(x = alter,
y = v38_sozd_kgroe,
col = "red",
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim(140, max(v38_sozd_kgroe, na.rm = T)),
main = "Alter und Koerpergroesse",
pch = 16)
plot(x = alter,
y = v38_sozd_kgroe,
col = "red",
xlab = "Alter",
ylab = var_label,
xlim = c(30,45),
ylim = c(140, max(v38_sozd_kgroe, na.rm = T)),
main = "Alter und Koerpergroesse",
pch = 16)
colors()
length(colors())
hist(v3_schul_bula)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
attributes(data_studis)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
attributes(data_studis)$variable.names
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
attributes(data_studis)$variable.labels
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
labels(v3_schul_bula)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
levels(v3_schul_bula)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
attributes(data_studis)$variable.labels
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
levels(attributes(data_studis)$variable.labels)
View(data_studis)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
attributes(v3_schul_bula)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
order(v3_schul_bula$value.labels)
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
v3_schul_bula$value.labels
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
attributes(v3_schul_bula)$value.labels
### Aufgabe 8 ---------------------------------------------------
#       Wahrscheinlich hast du festgestellt, dass die Graphik ohne Wertelabels
#       wenig Aussagekraft hat. Diese sollen nun hinzugefuegt werden. Hierfuer
#       sind folgende Schritte noetig.
#       - Der Datensatz wurde ohne Wertelabels eingelesen. Daher ist die
#         Speicherklasse der Variable 'v3_schul_bula' aktuell 'numeric'.
#       - Die Variable soll nun in eine Faktorvariable 'fac_v3_schul_bula'
#         mit den Levels 1:17 und den dazugehoerigen Wertelabels umgewandelt
#         werden.
#       - Versichere dich, dass die Labels den richtigen Werten zugeordnet werden.
order(attributes(v3_schul_bula)$value.labels)
fac_v3_schul_bula <- factor(v3_schul_bula, order(attributes(v3_schul_bula)$value.labels), labels = attributes(v3_schul_bula)$value.labels)
fac_v3_schul_bula <- factor(v3_schul_bula,
levels = order(attributes(v3_schul_bula)$value.labels),
labels = attributes(v3_schul_bula)$value.labels)
hist(v3_schul_bula)
barplot(table(v3_schul_bula))
attributes(v3_schul_bula)$value.labels
names(attributes(v3_schul_bula)$value.labels)
names(rev(attributes(v3_schul_bula)$value.labels))
fac_v3_schul_bula <- factor(v3_schul_bula,
levels = 1:17),
labels = names(rev(attributes(v3_schul_bula)$value.labels)))
fac_v3_schul_bula <- factor(v3_schul_bula,
levels = 1:17),
labels = names(rev(attributes(v3_schul_bula)$value.labels))))
fac_v3_schul_bula <- factor(v3_schul_bula,
levels = 1:17,
labels = names(rev(attributes(v3_schul_bula)$value.labels)))
barplot(table(fac_v3_schul_bula))
barplot(table(fac_v3_schul_bula), las = 2)
curve(3*x-x^2+10*x^3, from = -10, to = 10)
hist(v38_sozd_kgroe, col = "lightblue")
hist(v38_sozd_kgroe, col = "lightblue", freq = FALSE)
curve(dnorm(v38_sozd_kgroe, mean(v38_sozd_kgroe), sd(v39_sozd_gewicht)), add = T
,col = 2, lty = 2, lwd = 2)
curve(dnorm(x, mean(v38_sozd_kgroe), sd(v39_sozd_gewicht)), add = T
,col = 2, lty = 2, lwd = 2)
hist(v38_sozd_kgroe, col = "lightblue", freq = FALSE)
curve(dnorm(x, mean(v38_sozd_kgroe), sd(v39_sozd_gewicht)), add = T
,col = 2, lty = 2, lwd = 2)
curve(dnorm(x, mean(v38_sozd_kgroe), sd(v39_sozd_gewicht)), add = T ,col = 2, lty = 2, lwd = 2)
hist(v38_sozd_kgroe, col = "lightblue", freq = FALSE)
curve(dnorm(x, mean(v38_sozd_kgroe), sd(v39_sozd_gewicht)), add = T ,col = 2, lty = 2, lwd = 2)
lines(density(v38_sozd_kgroe),
col = "blue",
lwd = 3,
lty = 3)
curve(dnorm(x, mean(v38_sozd_kgroe), sd(v39_sozd_gewicht)), add = T ,col = 2, lty = 2, lwd = 2)
#       - Zuerst ein Histogramm mit relativen Haeufigkeiten in der Farbe
#         "lightblue".
#       - Diesem soll ein Kerndichteschaetzer in der Farbe "blue" hinzugefuegt
#         werden. Die Strichstaerke und der Linientyp soll jeweils auf 3 gesetzt
#         werden.
#       - Abschliessend soll auch noch eine Normalverteilungskurve hinzu
#         gezeichnet werden. Diese soll als Parameter mean und sd den Mittelwert
#         und die Standardabweichung der Variable 'v38_sozd_kgroe' verwenden.
#         Verwende hier die Farbe mit der Nummer 2 und setze die Werte fuer die
#         Strichstaerke und den Linientyp auf 2.
hist(v38_sozd_kgroe, col = "lightblue", freq = F)
lines(density(v38_sozd_kgroe),
col = "blue",
lwd = 3,
lty = 3)
curve(
dnorm(x,                             # Normalverteilungsdichte
mean(v38_sozd_kgroe, na.rm = T), # mit Mittelwert der Daten
sd(v38_sozd_kgroe, na.rm = T)),
col = 2,
lwd = 2,
lty = 2,
add = T)
library(tidyverse)
ggplot("mpg", aes(x = displ)) + geom_boxplot()
ggplot(mpg, aes(x = displ)) + geom_boxplot()
ggplot(mpg, aes(y = displ)) + geom_boxplot()
ggplot(mpg, aes(y = displ)) + geom_boxplot() + labs(title = "Boxplot")
ggplot(mpg, aes(y = displ, x = manufacturer, col = manufacturer)) + geom_boxplot() + labs(title = "Boxplot")
ggplot(mpg, aes(y = displ, x = manufacturer, col = manufacturer)) +
geom_boxplot() +
labs(title = "Boxplot") +
theme(axis.text.x = element_text(
angle = 90,
vjust = 0.5,
hjust = 1
))
library(MASS)
library(dplyr)
library(MASS)
View(survey)
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark()
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() +
line(density(height))
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() +
line(density(Height))
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() +
line(density(Height))
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() +
line(density(survey$Height))
line(density($Height))
line(density(survey$Height))
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() + geom_density()
ggplot(survey, aes(Height)) +
geom_histogram(bins = 30, col = 4, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() + geom_density()
ggplot(survey, aes(Height, y = ..density..)) +
geom_histogram(bins = 30, col = 4, fill = "white") +
labs(title = "Säulendiagramm") +
theme_dark() + geom_density()
